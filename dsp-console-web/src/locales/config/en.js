/* eslint-disable no-useless-escape */
export default {
  route: {
    dashboard: 'Dashboard',
    running: 'Running State',
    process: 'Data Process',
    application: 'Application',
    flow: 'Flow',
    plugin: 'Plugins',
    userManage: 'User Manage',
    users: 'User List',
    roles: 'Role List',
    permission: 'Permission List',
    system: 'System Setting',
    devops: 'DevOps',
    schedule: 'Task Schedule',
    config: 'Config Manage',
    overview: 'Overview',
    applicationDetail: 'Application Info',
    flowDetail: 'Flow Info'
  },
  dsp: {
    version: 'Version',
    flinkVersion: 'Flink Version',
    buildVersion: 'Build Version',
    jdkVersion: 'JDK Version',
    mavenVersion: 'Maven Version',
    hadoopVersion: 'Hadoop Version',
    name: 'Project'
  },
  userManage: {
    userNumber: 'User Number',
    userName: 'User Name',
    roleNames: 'User RoleNames',
    locked: 'Locked',
    action: 'Action',
    edit: 'Edit',
    other: 'Other',
    all: 'All',
    disable: 'Disable',
    enable: 'Enable',
    newUser: 'New User',
    delete: 'Delete',
    settings: 'Settings',
    logout: 'Logout',
    docs: 'Docs',
    version: 'Version',
    versionTitle: 'Flink-Dsp Version'
  },
  application: {
    task: 'Tasks',
    running: 'Running Jobs',
    total: 'Total Application',
    needRestart: 'Need Restart',
    deployed: 'Deployed',
    canceled: 'Canceled',
    finished: 'Finished',
    failed: 'Failed',
    appName: 'App Name',
    jobId: 'Job ID',
    appType: 'App Type',
    appState: 'App State',
    flowName: 'Flow Name',
    createTime: 'Create Time',
    remark: 'Remark',
    action: 'Operation',
    deployInfo: 'Deploy Info',
    runningState: 'Running State',
    otherInfo: 'Other Info',
    jobFile: 'Job File',
    startTime: 'Start Time',
    endTime: 'End Time',
    restartTime: 'Restart Time',
    duration: 'Duration',
    createUser: 'Create User',
    updateTime: 'Update Time',
    deleteConfirm: 'Are you sure to delete this application?',
    startApp: 'Start App',
    stopApp: 'Stop App',
    viewLog: 'View Log',
    updateApp: 'Update App',
    deleteApp: 'Delete App',
    newApp: 'New Application'
  },
  appCreate: {
    appDetails: 'Application Details',
    appName: 'Application Name',
    appType: 'Application Type',
    appFlow: 'Application Flow',
    engineType: 'Engine Type',
    engineMode: 'Engine Mode',
    engineConfig: 'Engine Config',
    otherConfig: 'Other Config',
    speedLimit: 'Speed Limit',
    readSpeed: 'Read Speed (PCS)',
    processSpeed: 'Process Speed (PCS)',
    writeSpeed: 'Write Speed (PCS)',
    timeUnit: 'Time Unit (SEC)',
    unresolved: 'Unresolved',
    unresolvedHandler: 'Unresolved Handler',
    unresolvedHandlerDesc: 'choose a unresolved handler',
    maxAmount: 'Max Amount (PCS)',
    handlerConfig: 'Handlers Config',
    metrics: 'Metrics',
    metricsMsg: 'Attention',
    // eslint-disable-next-line no-template-curly-in-string
    metricsDesc: 'The reporter used here is supposed to be found in the directory of \$\{FLINK_HOME\}\/lib, which needs to add manually.',
    reporter: 'Reporter',
    reportInterval: 'Report Interval',
    reportHost: 'Report Host',
    reportPort: 'Report Port',
    customConfig: 'Custom Config',
    customVars: 'Custom Vars',
    remarkMsg: 'Remark',
    remarkMsgDesc: 'Please input remark message of application',
    inputAppName: 'Please input an application name',
    duplicateAppName: 'The name has been used',
    chooseAppType: 'Please choose an application type',
    chooseAppFlow: 'Please choose a ref flow',
    oneFlowOnly: 'Only one flow can be selected',
    chooseEngineType: 'Please choose an engine type',
    chooseEngineTypeFirst: 'Please choose an engine type first',
    chooseEngineMode: 'Please choose an engine mode',
    notifyValidateError: 'Please check whether the form is filled in correctly',
    saveSuccess: 'Save Application Success',
    saveFailed: 'Save Application Failed'
  },
  flow: {
    flowId: 'Flow ID',
    flowName: 'Flow Name',
    disableMark: 'Enable/Disable',
    createUser: 'Create User',
    createTime: 'Create Time',
    remarkMsg: 'Remark',
    action: 'Operation',
    createButton: 'New Flow',
    uploadButton: 'Upload',
    flowRefs: 'Flow Refs',
    deleteConfirm: 'Are you sure to delete this flow?'
  },
  flowCreate: {
    flowNameTip: 'Please input a flow name',
    flowRemarkTip: 'Please input flow remark',
    zeroNodeWarn: 'At least one node is required to add',
    zeroReaderNodeWarn: 'At least one Reader node is required to add',
    emptyNodeWarn: 'Empty node exists, please add plugin first! ',
    nodeType: 'Node Type',
    nodeName: 'Node Name',
    nodeConfig: 'Node Configuration',
    nodeSettings: 'Node Settings',
    basicInfo: 'Basic Info',
    nodeDesc: 'Node Desc',
    nodeSpeed: 'Node Speed Limit',
    nodeUnresolvedCollector: 'Node Unresolved Collector',
    nodeNameTip: 'Please input a node Name',
    nodeDescTip: 'Please input node description',
    pluginConfigs: 'Plugin Configs',
    pluginInfo: 'Plugin Info'
  },
  flowNode: {
    readerNodeWarn: 'Reader node can only add 1 plugin, pls remove the existing plugin first!',
    processNodeWarn: 'Process node can add 8 plugins at most, but not recommend to add more than 5 plugins at 1 node!',
    writerNodeWarn: 'Writer node can add 3 plugins at most, but not recommend to add more than 1 plugin at one node!',
    unionNodeWarn: 'Union node do not required extra plugin',
    unmatchPluginWarn: 'Plugin is not matched with node type: ',
    unknownPluginWarn: 'Unknown plugin type, please check if the plugin works well',
    plugin: 'Plugin: ',
    addSuccessfully: ' is successfully added to node: '
  },
  plugin: {
    pageTitle: 'Total Plugins',
    createButton: 'New Plugin',
    pluginId: 'Plugin ID',
    pluginName: 'Plugin Name',
    pluginType: 'Plugin Type',
    pluginTypes: {
      input: 'INPUT',
      output: 'OUTPUT',
      process: 'PROCESS',
      split: 'SPLIT',
      UNION: 'UNION',
      SYSTEM: 'SYSTEM',
      UNKNOWN: 'UNKNOWN'
    },
    pluginClass: 'Plugin Class',
    pluginDescription: 'Plugin Desc',
    pluginConfigs: {
      key: 'Param Name',
      defaultValue: 'Default Value',
      type: 'Param Type',
      required: 'Required',
      optionals: 'Param Options',
      description: 'Param Desc'
    },
    pluginJarId: 'Plugin Jar Id',
    pluginJarAlias: 'Plugin Jar Alias',
    pluginJarName: 'Plugin Jar Name',
    pluginJarOrigin: {
      title: 'Origin',
      system: 'System',
      user: 'User'
    },
    disableMark: 'Disable',
    pluginNum: 'Plugin Num',
    createTime: 'Create Time',
    updateTime: 'Update Time',
    uploadTime: 'Upload Time',
    remark: 'Remark',
    flowRef: 'Flow Ref',
    deleteConfirm: 'Are you sure to delete this plugin?',
    pluginInfo: 'Basic Info',
    pluginJarMd5: 'Plugin Jar MD5',
    pluginJarUrl: 'Plugin Jar Url',
    pluginDefFile: 'Plugin Definition File',
    pluginDefFileContent: 'Plugin Def File Content',
    pluginList: 'Plugin List',
    extInfo: 'Extended Info',
    pluginAlias: 'Plugin Alias',
    pluginDetailInfo: 'Plugin Detail Information',
    fileSize: 'Plugin Jar Size(B)',
    uploadPlugin: 'Plugin Upload',
    uploadDesc: 'please upload a plugin jar package',
    verifyPlugin: 'Plugin Verification',
    verifyDesc: 'please check and complement the basic info of plugins',
    stepOneDesc: 'Step 1: choose a plugin jar package',
    stepTwoDesc: 'Step 2: verify the jar package',
    stepOneMsg1: 'Please click the right button to start verification',
    stepOneMsg2: 'Please note do not close this window. If the verification is not completed for a long time, please upload again. Once the verification starts, the progress and result will be shown below.',
    uploadFileTip1: 'Click or drag file here to upload',
    uploadFileTip2: 'It only supports uploading files of *.jar type, and does not support uploading multiple files. The maximum file size cannot exceed 512M.',
    verify: 'Verify',
    verifying: 'Verifying',
    tryAgain: 'Try again',
    complete: 'Completed',
    previous: 'Previous',
    next: 'Next',
    finish: 'Finish',
    notifyReloadSuccess: 'Reload plugins successfully',
    notifyUploadSuccess: 'Upload plugins successfully',
    notifyUploadFail: 'Upload plugins failed',
    notifyFileUploadSuccess: 'Upload plugins successfully',
    reloadWarn: 'Reload the plugin may cause the and associated flows to fail to work normally! Please ensure that the uploaded plug-ins are correct and aware of the possible impactÔºÅ'
  },
  form: {
    enable: 'Enable',
    disable: 'Disable',
    edit: 'Edit',
    delete: 'Delete',
    deleteCheck: 'Sure to delete?',
    submit: 'Submit',
    save: 'Save',
    cancel: 'Cancel',
    view: 'View',
    action: 'Operation',
    upload: 'Upload',
    search: 'Search',
    reset: 'Reset',
    deleteOk: 'Delete',
    deleteCancel: 'Cancel',
    add: 'Add',
    key: 'Key',
    value: 'Value',
    desc: 'Description',
    download: 'Download'
  },
  engine: {
    engineType: 'Engine Type',
    engineMode: 'Engine Mode'
  },
  dict: {
    appType: {
      stream: 'STREAM',
      batch: 'BATCH',
      sql: 'SQL'
    },
    appState: {
      running: 'RUNNING',
      stopped: 'STOPPED',
      canceled: 'CANCELED',
      finished: 'FINISHED',
      starting: 'STARTING',
      stopping: 'STOPPING',
      canceling: 'CANCELING',
      restarting: 'RESTARTING',
      failed: 'FAILED',
      error: 'ERROR',
      unknown: 'UNKNOWN',
      init: 'INIT',
      disable: 'DISABLE',
      waiting: 'WAITING'
    },
    pluginType: {
      input: 'Input',
      process: 'Process',
      split: 'Split',
      output: 'Output',
      unknown: 'UNKNOWN'
    }
  },
  message: {
    success: 'Success',
    failed: 'Failed',
    system: {
      failed: 'Internal Server Error'
    },
    flow: {
      disable: 'Disable Flow Success',
      enable: 'Enable Flow Success',
      delete_success: 'Delete Flow Success',
      delete_failed: 'Delete Flow Failed',
      update_success: 'Update Flow Success',
      update_failed: 'Update Flow Failed',
      create_success: 'Create Flow Success',
      create_failed: 'Create Flow Failed',
      upload_success: 'Upload Flow Success',
      upload_failed: 'Upload Flow Failed'
    },
    application: {
      disable: 'Disable Application Success',
      enable: 'Enable Application Success',
      delete_success: 'Delete Application Success',
      delete_failed: 'Delete Application Failed',
      update_success: 'Update Application Success',
      update_failed: 'Update Application Failed',
      create_success: 'Create Application Success',
      create_failed: 'Create Application Failed'
    },
    plugin: {
      disable: 'Disable Plugin Success',
      enable: 'Enable Plugin Success',
      delete_success: 'Delete Plugin Success',
      delete_failed: 'Delete Plugin Failed',
      update_success: 'Update Plugin Success',
      update_failed: 'Update Plugin Failed',
      create_success: 'Create Plugin Success',
      create_failed: 'Create Plugin Failed'
    },
    logout: 'Are you sure you want to logout?',
    warn: 'Warn',
    welcome: 'Welcome',
    welcomeBack: 'Welcome Back!',
    goodEvening: 'Good Evening',
    goodMorning: 'Good Morning',
    goodAfternoon: 'Good Afternoon',
    goodNoon: 'Good Noon'
  }
}
